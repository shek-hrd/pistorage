<!DOCTYPE html>
<html>
<head>
<title>Find Sequence in e by Numeric Base</title>
<style>
  body { font-family: Arial; margin: 20px; }
  input, button { margin: 10px; padding: 5px; }
  #progress { width: 100%; height: 20px; }
</style>
</head>
<body>
<h1>Find Sequence in Decimal Expansion of e</h1>
<p>Enter a sequence of digits in the chosen numeric base. The sequence will be converted to its decimal digit representation and searched in e's expansion.</p>
<label>Sequence: <input id="sequence" placeholder="e.g., 2718" value="2718"></label><br>
<label>Base: <input id="base" type="number" min="2" max="36" value="10"></label> (2-36 for valid digit chars)<br>
<button id="startBtn">Start Search</button>
<button id="stopBtn" disabled>Stop</button><br>
<div id="progressText">Ready</div>
<progress id="progress" value="0" max="10000"></progress><br>
<div id="result"></div>

<script>
// First 10000 digits of e (including the integer part)
const eDigits = "27182818284590452353602874713526624977572470936999595749669676277240766303535475945713821785251664274274663919320030599218174135966290435729003342952605956307381323286279434907632338298807531952510190115738341879307021540891499348841675092447614606680822648001684774118537423497717362" + 
"1937381674580774533804495030721" + // Continue with more digits... (truncated for brevity)
" (Simulate with shorter string or add full digits here for production)";

// Since full 10000 digits are too long for this response, in actual implementation 
// you'd include the complete string of e's digits starting from the integer 2

let isRunning = false;

document.getElementById('startBtn').addEventListener('click', startSearch);
document.getElementById('stopBtn').addEventListener('click', stopSearch);

function startSearch() {
  const sequence = document.getElementById('sequence').value.trim();
  const base = parseInt(document.getElementById('base').value);
  
  if (!sequence) {
    alert("Please enter a sequence");
    return;
  }
  
  if (base < 2 || base > 36) {
    alert("Base must be between 2 and 36");
    return;
  }
  
  // If base != 10, convert sequence to number then to base 10 string
  let searchStr;
  try {
    if (base === 10) {
      searchStr = sequence;
    } else {
      const num = parseInt(sequence, base);
      searchStr = num.toString(10);
    }
  } catch (e) {
    alert("Invalid sequence for the chosen base");
    return;
  }
  
  isRunning = true;
  document.getElementById('startBtn').disabled = true;
  document.getElementById('stopBtn').disabled = false;
  
  const progressText = document.getElementById('progressText');
  const progressBar = document.getElementById('progress');
  const resultDiv = document.getElementById('result');
  
  progressBar.max = eDigits.length - searchStr.length;
  progressBar.value = 0;
  
  resultDiv.textContent = `Searching for "${searchStr}"...`;
  progressText.textContent = "Checking...";
  
  let i = 0;
  const searchLen = searchStr.length;
  
  function step() {
    if (!isRunning) return;
    
    if (i >= eDigits.length - searchLen) {
      isRunning = false;
      resultDiv.textContent = `Not found within ${eDigits.length} digits`;
      cleanup();
      return;
    }
    
    // Check if sequence matches at this position
    let found = true;
    for (let j = 0; j < searchLen; j++) {
      if (eDigits[i + j] !== searchStr[j]) {
        found = false;
        break;
      }
    }
    
    if (found) {
      resultDiv.textContent = `Found at position ${i + 1} (starting from the first digit "2")`;
      cleanup();
      return;
    }
    
    i++;
    progressBar.value = i;
    progressText.textContent = `Checked ${i} positions`;
    
    // Yield to UI thread every 1000 iterations to prevent freezing
    if (i % 1000 === 0) {
      setTimeout(step, 0);
    } else {
      step();
    }
  }
  
  function cleanup() {
    document.getElementById('startBtn').disabled = false;
    document.getElementById('stopBtn').disabled = true;
    isRunning = false;
  }
  
  step();
}

function stopSearch() {
  isRunning = false;
  document.getElementById('result').textContent = "Search stopped";
  document.getElementById('progressText').textContent = "Stopped";
}
</script>
</body>
</html>
