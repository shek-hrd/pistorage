<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Find Sequence in e's Decimal Expansion</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            padding: 20px;
        }
        #result {
            margin-top: 20px;
            font-weight: bold;
        }
        #status {
            margin-top: 10px;
        }
        #progress {
            margin-top: 20px;
        }
        #stopButton {
            margin-top: 20px;
            padding: 10px 20px;
            background-color: red;
            color: white;
            border: none;
            cursor: pointer;
        }
        #stopButton:disabled {
            background-color: grey;
        }
    </style>
</head>
<body>

<h1>Find Sequence in e's Decimal Expansion</h1>
<p>
    This tool finds the first occurrence of the sequence `654651899476546654684768465334638436265365123202689` in the decimal expansion of $$ e $$ (Euler's number).
</p>

<button onclick="findSequence()">Find Sequence</button>
<button id="stopButton" onclick="stopSearch()" disabled>Stop Search</button>

<div id="status"></div>
<div id="progress">
    <progress id="progressBar" value="0" max="100"></progress>
</div>
<div id="result"></div>

<script>
// Flag to control the search status
let searching = false;
let stopRequested = false;
let digitsCalculated = 0;
let increment = 50000;
let maxDigits = 1000000;
let eString = '';
let sequence = '654651899476546654684768465334638436265365123202689';

// Function to calculate e to a specified number of digits
function calculateE(digits) {
    let e = 2; // e starts with 2 before the decimal point
    let factor = 1;
    for (let i = 1; i <= digits; i++) {
        factor *= i;
        e += 1 / factor;
    }
    return e;
}

// Function to find the first occurrence of the sequence in e's decimal expansion
function findSequence() {
    searching = true;
    stopRequested = false;
    digitsCalculated = 0;
    eString = '';  // Clear previous digits
    document.getElementById('stopButton').disabled = false;
    document.getElementById('status').textContent = 'Starting the search...';
    document.getElementById('progressBar').value = 0; // Reset the progress bar

    const startTime = performance.now();

    searchNextChunk();

    function searchNextChunk() {
        if (!searching) return;

        // Calculate the next chunk of digits
        const e = calculateE(digitsCalculated + increment);
        const newDigits = e.toString().slice(2); // Remove "2." part to get decimal digits
        eString += newDigits; // Append the new digits to the existing ones

        // Search for the sequence in the current portion of e
        const position = eString.indexOf(sequence);
        
        if (position !== -1) {
            const endTime = performance.now();
            const elapsedTime = (endTime - startTime).toFixed(3); // Time in milliseconds
            document.getElementById('result').textContent = `Sequence found at position ${position + 1}.`;
            document.getElementById('status').textContent = `Search completed in ${elapsedTime} ms.`;
            document.getElementById('stopButton').disabled = true;
            searching = false;
        } else {
            digitsCalculated += increment;
            const progress = (digitsCalculated / maxDigits) * 100;
            document.getElementById('progressBar').value = progress;
            document.getElementById('status').textContent = `Searching... ${digitsCalculated} digits calculated`;

            if (digitsCalculated >= maxDigits) {
                // Expand the search range if not found
                maxDigits += 1000000;  // Increase the search range by another million digits
            }

            // If not stopped, continue searching
            if (!stopRequested) {
                setTimeout(searchNextChunk, 0);  // Continue the search
            } else {
                document.getElementById('status').textContent = 'Search stopped by user.';
                document.getElementById('stopButton').disabled = true;
                searching = false;
            }
        }
    }
}

// Function to stop the search
function stopSearch() {
    stopRequested = true;
}
</script>

</body>
</html>